version: "3"
services:
  db:
    image: postgres:14
    container_name: geonames_db
    #env_file:
      #- ./.env
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: default
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - todo_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "admin", "-d", "default"]






      
  # create-table:
  #   image: postgres:14
  #   command: bash -c 'PGPASSWORD=admin psql -U admin --dbname todo_list -p 5432 -h database -c "CREATE TABLE IF NOT EXISTS user_table (user_id int PRIMARY KEY, username varchar(256), email varchar(256));"'
  #   depends_on:
  #     database:
  #       condition: service_healthy


#Из докер файла
  backend:
    image: example/database
    container_name: backend-dockerfile
    build:
      context: .
      dockerfile: Dockerfile
    # command: [
    #   "poetry", "run",
    #   "uvicorn",
    #   "main:app",
    #   "--port", "8004"
    #           ]
    ports:
      - 8007:8007
   #   - 80:8004
    networks:
      - todo_net      

  # backend:
  #   image: python:3.9.16
  #   container_name: backend
  #   environment:
  #     HOST: value
  #     PORT: 5432
  #     DB: default
  #     DB_USERMANE: admin
  #     DB_PASSWORD: admin
  #   networks:
  #     - todo_net
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   command: >
  #     /bin/sh -c 'python tests.py'
  
  # nginx:
  #   image: nginx:latest
  #   container_name: frontend
  #   networks:
  #     - todo_net
  #   ports:
  #     - 80:80
  #   volumes:
  #     #- ./nginx.conf:/etc/nginx/nginx.conf_new:ro  # прокидывается
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   # depends_on:
  #   #   backend:
  #   #     condition: service_healthy

  # redis:
  #   image: redis:6.2-alpine
  #   restart: always
  #   ports:
  #     - '6379:6379'
  #   command: redis-server --save 20 1 --loglevel warning --requirepass 123123
  #   volumes: 
  #     - redis:/data
  #   networks:
  #     - todo_net


volumes:
  postgres:
  # redis:
  #   driver: local
networks:
    todo_net:




    